@page "/creategame"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using DataBasHunters.Shared;

<h1>Create New Game</h1>

<form @onsubmit="CreateGameHandler">
    <div class="form-group">
        <label for="Sum">Enter your bet</label>
        <input type="number" id="Sum" @bind="NewCointoss.Sum" />
        <span>@ValidationMessage</span>
    </div>

    <br />

    <div class="form-group">
        <label>Heads or tails?</label>
        <div>
            <label>
                <input type="radio" name="Heads" checked="@NewCointoss.Heads" @onclick="() => NewCointoss.Heads = true" /> Heads
            </label>
            <label>
                <input type="radio" name="Heads" checked="@(!NewCointoss.Heads)" @onclick="() => NewCointoss.Heads = false" /> Tails
            </label>
        </div>
    </div>

    <br />

    <button type="submit" class="btn btn-primary">Create game</button>
</form>

@code {
    private Cointoss NewCointoss = new Cointoss();
    private ViewModelProfile vm;
    private string ValidationMessage;

    //On initialize check cookie

    private async Task CreateGameHandler()
    {
        // Validate the bet value
        if (NewCointoss.Sum < 1 || NewCointoss.Sum > 10000)
        {
            ValidationMessage = "Bet value must be between 0 and 10,000.";
            return;
        }
        else
        {
            ValidationMessage = ""; // Clear the validation message if the value is valid
        }

        //make sure you have sufficient funds

        var response1 = await Http.GetAsync("GetUser");

        if (response1.IsSuccessStatusCode)
        {
            vm = await response1.Content.ReadFromJsonAsync<ViewModelProfile>();
        }
        else
        {
            NavigationManager.NavigateTo("/Login");
        }

        if (vm != null && vm.user.Funds - NewCointoss.Sum < 1)
        {
            ValidationMessage = "Insufficient funds";
            return;
        }

        var response = await Http.PostAsJsonAsync("InsertGame", NewCointoss);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/fetchdatagames");
        }
        else
        {
            // Handle errors, show error message, etc.
        }
    }
}
